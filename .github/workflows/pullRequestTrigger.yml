# This is a basic workflow to help you get started with Actions

name: pull-request check

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    
  # This workflow contains a single job called "build"
  pull_request_test:
    # The type of runner that the job will run on
    name: pull request check
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - uses: actions/checkout@v3

      - name: Setup
        uses: actions/setup-node@v3
        id: setup_node_id
        with:
          node-version: '16'
      - uses: actions/cache@v3
        id: node_modules_cache_id
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}

      - run: echo '${{ toJSON(steps.node_modules_cache_id.outputs) }}'

      - if: ${{ steps.node_modules_cache_id.outputs.cache-hit != 'true' }}
        run: |
          yarn install
      
      - name: Make env
        run: |
          echo -e  "VITE_MAPBOX_TOKEN=${{ secrets.MAPBOX_TOKEN }}"\
            > .env

      - name: Build check
        run: |
          yarn build_prod
#         一時的にLintチェックを無効にする
        env:
          CI: false
          
